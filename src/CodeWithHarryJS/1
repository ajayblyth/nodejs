-------------------------------------------------------------
JAVASCRIPT TUTORIAL - SECTION 1: INTRODUCTION + BASICS
-------------------------------------------------------------

1. Introduction to JavaScript
------------------------------
1.1 JavaScript is one of the most popular programming languages in the world.
1.2 It is used both on the **client-side (browser)** and **server-side (Node.js)**.
1.3 Originally built to make web pages interactive, but now used for:
    - Web development
    - Mobile apps
    - Desktop apps
    - Backend development
1.4 JavaScript can be used **independently** or with frameworks like React, Angular, Vue.

2. Where JavaScript Runs
------------------------
2.1 Runs in the **browser** using the browser’s JavaScript engine (e.g., Chrome uses V8).
2.2 Runs on the **server** using Node.js.
2.3 Browser = client-side, DOM manipulation, user interactions.
2.4 Node.js = server-side logic, databases, APIs, backend tasks.

3. Difference Between JavaScript and Java
-----------------------------------------
3.1 Despite similar names, **JavaScript and Java are totally different**.
3.2 Java is a compiled, strongly typed, class-based language.
3.3 JavaScript is interpreted, dynamically typed, prototype-based.
3.4 JavaScript is easier to start with for beginners.

4. First JavaScript Code
------------------------
4.1 Inline JavaScript:
    ```html
    <script>
      console.log("Hello World!");
    </script>
    ```
    - Prints "Hello World!" in browser console.

4.2 External file:
    ```html
    <script src="app.js"></script>
    ```
    - Recommended way (keeps HTML and JS separate).

5. console.log() and Developer Tools
------------------------------------
5.1 `console.log()` is used to print output to the browser console.
5.2 Open Developer Tools:
    - Chrome: Right click → Inspect → Console tab.
5.3 Useful for debugging and checking program flow.

6. Comments in JavaScript
-------------------------
6.1 Single-line comment:
    ```js
    // This is a comment
    ```
6.2 Multi-line comment:
    ```js
    /* This is
       a multi-line comment */
    ```
6.3 Comments help explain code for humans (ignored by computer).

7. Variables
------------
7.1 Variables are used to store data.
7.2 Three ways to declare variables:
    a) `var` → old way, function-scoped, avoid in modern JS.
    b) `let` → block-scoped, can be reassigned.
    c) `const` → block-scoped, cannot be reassigned (constant).

7.3 Examples:
    ```js
    let age = 25;
    const name = "Ajay";
    var city = "Delhi";
    ```
7.4 Best practice:
    - Use `const` by default.
    - Use `let` if value will change.
    - Avoid `var`.

8. Data Types
-------------
8.1 Primitive types:
    - String → `"Hello"`
    - Number → `10`, `10.5`
    - Boolean → `true`, `false`
    - Null → intentional empty value
    - Undefined → declared but not assigned
    - Symbol → unique identifiers
    - BigInt → very large integers

8.2 Non-primitive (Reference) types:
    - Object
    - Array
    - Function

8.3 Example:
    ```js
    let score = 100;          // number
    let username = "Ajay";    // string
    let isLoggedIn = true;    // boolean
    let items = ["pen", "book"]; // array
    let user = { name: "Ajay", age: 30 }; // object
    ```

9. typeof Operator
------------------
9.1 Used to check data type of a variable.
9.2 Example:
    ```js
    console.log(typeof 123);       // number
    console.log(typeof "hello");   // string
    console.log(typeof true);      // boolean
    console.log(typeof null);      // object (weird quirk in JS)
    console.log(typeof undefined); // undefined
    ```

10. Summary / Key Takeaways
---------------------------
10.1 JavaScript = beginner-friendly, widely used, runs in browser & server.
10.2 Use external JS files for cleaner code.
10.3 Use `console.log()` to test/debug.
10.4 Prefer `let` and `const` for variables, avoid `var`.
10.5 Know primitive vs reference types.
10.6 Use `typeof` to check data type.
-------------------------------------------------------------
